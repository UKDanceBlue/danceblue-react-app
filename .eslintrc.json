{
  "root": true,
  "parser": "@typescript-eslint/parser",
  "env": {
    "es2021": true,
    "react-native/react-native": true
  },
  "plugins": [
    "jsdoc",
    "react-native"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:import/recommended",
    "plugin:import/typescript",
    "plugin:react/recommended",
    "plugin:react/jsx-runtime",
    "plugin:react-hooks/recommended"
  ],
  "overrides": [
    // Eslint rules
    {
      "files": [
        "**/*.test.*"
      ],
      "plugins": [
        "jest"
      ],
      "extends": [
        "plugin:jest/recommended",
        "plugin:jest/style"
      ],
      "rules": {
        "jest/prefer-todo": "warn",
        "jest/consistent-test-it": "error"
      }
    },
    {
      "files": [
        "**/*.ts*"
      ],
      "plugins": [
        "@typescript-eslint"
      ],
      "extends": [
        "plugin:@typescript-eslint/recommended",
        "plugin:@typescript-eslint/recommended-requiring-type-checking",
        "plugin:@typescript-eslint/strict"
      ],
      "rules": {
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/consistent-indexed-object-style": "off",
        "@typescript-eslint/require-await": "error",
        "@typescript-eslint/return-await": "error",
        "@typescript-eslint/quotes": [
          "error",
          "double"
        ],
        "@typescript-eslint/semi": [
          "error",
          "always"
        ],
        "@typescript-eslint/member-delimiter-style": "error",
        "@typescript-eslint/brace-style": [
          "error",
          "1tbs",
          {
            "allowSingleLine": true
          }
        ],
        "@typescript-eslint/prefer-for-of": "off",
        "@typescript-eslint/lines-between-class-members": [
          "error",
          "always",
          {
            "exceptAfterSingleLine": true
          }
        ],
        "@typescript-eslint/object-curly-spacing": [
          "error",
          "always"
        ],
        "@typescript-eslint/space-before-function-paren": [
          "error",
          {
            "anonymous": "always",
            "named": "never",
            "asyncArrow": "always"
          }
        ],
        "@typescript-eslint/keyword-spacing": "error",
        "@typescript-eslint/comma-dangle": [
          "error",
          {
            "arrays": "only-multiline",
            "objects": "only-multiline",
            "imports": "never",
            "exports": "never",
            "functions": "never"
          }
        ],
        "@typescript-eslint/comma-spacing": [
          "error",
          {
            "before": false,
            "after": true
          }
        ]
      }
    }
  ],
  "rules": {
    // Possible Errors
    "no-undef": "off",
    "spaced-comment": [
      "error",
      "always"
    ],
    "radix": "error",
    "yoda": "error",
    "prefer-template": "warn",
    "curly": "error",
    "grouped-accessor-pairs": "error",
    "no-console": [
      "warn",
      {
        "allow": [
          "warn",
          "error"
        ]
      }
    ],
    "no-implicit-coercion": [
      "error",
      {
        "allow": [
          "!!"
        ]
      }
    ],
    "no-implicit-globals": "error",
    "no-lonely-if": "error",
    "no-var": "error",
    "prefer-const": "error",
    "object-shorthand": "error",
    "prefer-arrow-callback": "error",
    "prefer-destructuring": [
      "error",
      {
        "array": false,
        "object": true
      },
      {
        "enforceForRenamedProperties": false
      }
    ],
    "no-useless-concat": "error",
    "prefer-numeric-literals": "error",
    "prefer-object-spread": "error",
    "array-callback-return": "error",
    "no-await-in-loop": "error",
    "no-constant-binary-expression": "error",
    "no-promise-executor-return": "error",
    "@typescript-eslint/no-misused-promises": [
      "error",
      {
        "checksVoidReturn": {
          "attributes": false
        }
      }
    ],
    "no-self-compare": "error",
    "require-atomic-updates": "error",
    "class-methods-use-this": "error",
    "eqeqeq": [
      "error",
      "smart"
    ],
    // Style
    "react/jsx-wrap-multilines": "warn",
    "react/jsx-first-prop-new-line": [
      1,
      "multiline-multiprop"
    ],
    "react/jsx-max-props-per-line": [
      1,
      {
        "maximum": {
          "single": 3,
          "multi": 1
        }
      }
    ],
    "arrow-parens": [
      "error",
      "always"
    ],
    "no-multi-spaces": "error",
    "newline-per-chained-call": [
      "error",
      {
        "ignoreChainWithDepth": 3
      }
    ],
    "no-trailing-spaces": [
      "error",
      {
        "skipBlankLines": true
      }
    ],
    "no-whitespace-before-property": "error",
    "object-curly-newline": [
      "error",
      {
        "ObjectExpression": {
          "multiline": true
        },
        "ObjectPattern": {
          "multiline": true,
          "minProperties": 2
        },
        "ImportDeclaration": "never",
        "ExportDeclaration": {
          "multiline": true,
          "minProperties": 3
        }
      }
    ],
    "operator-linebreak": [
      "error",
      "after",
      {
        "overrides": {
          "=": "none",
          "?": "before",
          ":": "before"
        }
      }
    ],
    "padded-blocks": [
      "error",
      "never"
    ],
    "rest-spread-spacing": [
      "error",
      "never"
    ],
    "semi-spacing": [
      "error",
      {
        "before": false,
        "after": true
      }
    ],
    "unicode-bom": [
      "error",
      "never"
    ],
    "array-bracket-newline": [
      "error",
      {
        "multiline": true,
        "minItems": 3
      }
    ],
    "array-bracket-spacing": [
      "error",
      "always",
      {
        "singleValue": false
      }
    ],
    "array-element-newline": [
      "error",
      {
        "ArrayExpression": "consistent",
        "ArrayPattern": {
          "minItems": 3
        }
      }
    ],
    "arrow-spacing": [
      "error",
      {
        "before": true,
        "after": true
      }
    ],
    "comma-style": [
      "error",
      "last"
    ],
    "dot-location": [
      "error",
      "property"
    ],
    "eol-last": [
      "error",
      "always"
    ],
    "jsx-quotes": [
      "error",
      "prefer-double"
    ],
    "function-call-argument-newline": [
      "error",
      "consistent"
    ],
    "indent": [
      "error",
      2
    ],
    "implicit-arrow-linebreak": [
      "error",
      "beside"
    ],
    "key-spacing": [
      "error",
      {
        "beforeColon": false,
        "afterColon": true
      }
    ],
    // jsdoc
    "jsdoc/no-types": "error",
    // Imports
    "import/named": "off",
    "import/namespace": "off",
    "import/default": "off",
    "import/no-named-as-default-member": "off",
    "import/no-named-as-default": "off",
    "import/no-cycle": "off",
    "import/no-unused-modules": "off",
    "import/no-deprecated": "off",
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "parent",
          "sibling",
          "index"
        ],
        "pathGroups": [
          {
            "pattern": "@custom-lib/**",
            "group": "external",
            "position": "after"
          }
        ],
        "pathGroupsExcludedImportTypes": [
          "builtin"
        ],
        "alphabetize": {
          "order": "asc"
        },
        "newlines-between": "always"
      }
    ],
    "sort-imports": [
      "error",
      {
        "allowSeparatedGroups": true,
        "ignoreDeclarationSort": true
      }
    ],
    "import/no-unresolved": "off",
    // React
    "react/jsx-uses-react": "off",
    "react/react-in-jsx-scope": "off"
  },
  "settings": {
    "jsdoc": {
      "tagNamePreference": {
        "returns": "return"
      }
    },
    "react": {
      "version": "detect"
    }
  },
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "project": [
      "./tsconfig.json"
    ],
    "sourceType": "module",
    "tsconfigRootDir": "."
  }
}
